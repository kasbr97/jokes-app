
@model IEnumerable<JokesWebApp.Models.Joke>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}


<h1>Jokes</h1>

<p>
    <a asp-action="Create">Create New Jokes</a>
</p>
<form asp-controller="Jokes" asp-action="Index" method="get">
<div class="d-inline-flex" style="width:100%">
    <input style="margin-right: 10px;" type="text" name="searchChar" class="form-control" />
        <button type="submit" class="btn btn-primary">
        Search
    </button>
</div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.JokeQuestion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JokeAnswer)
            </th>
            <th>
                Users
            </th>
            <th>Options</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.JokeQuestion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JokeAnswer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td> 
            <td>
                    @if (User.Identity?.Name == item.UserId)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> 
                    } else {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>


